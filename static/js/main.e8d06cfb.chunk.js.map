{"version":3,"sources":["components/feedcard.component.js","components/mainpage.component.js","App.js","serviceWorker.js","index.js"],"names":["Feedcard","className","style","this","props","provider","href","url","rel","target","title","desc","Component","Mainpage","state","location","items","l","setState","axios","get","headers","then","res","articles","data","value","catch","error","console","log","toString","process","REACT_APP_KEY","autoFocus","onClick","handleClick","map","item","name","description","App","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e8d06cfb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Feedcard extends Component {\r\n    render() {\r\n        const card_st = {\r\n            \"height\" : \"8em\",\r\n        }\r\n\r\n        const card_body = {\r\n            \"padding\":\"0\",\r\n            \"marginLeft\":\"10px\"\r\n        }\r\n        \r\n        const p_st = {\r\n            \"font-size\" : \"small\"\r\n        }\r\n\r\n        return (\r\n            <div className=\"card mt-2 mb-2\" style={card_st}>\r\n                <div className=\"card-body\" style={card_body}>\r\n                    <small>{this.props.provider}</small>\r\n                    <a href={this.props.url} rel=\"noopener noreferrer\" target=\"_blank\"><h6>{this.props.title}</h6></a>\r\n                    <p style={p_st}>{this.props.desc}<br/>\r\n                    \r\n                    </p>\r\n                </div> \r\n            </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nimport Feedcard from \"./feedcard.component\"\r\n\r\nexport default class Mainpage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            location : \"USA\",\r\n            items : [],\r\n        };\r\n    }\r\n\r\n    handleClick(l){\r\n        this.setState({\r\n            location:l\r\n        })\r\n\r\n        axios.get('https://covid-news-react-app.cognitiveservices.azure.com//bing/v7.0/news/search?q=coronavirus%20'+l, {\r\n            headers : {\r\n                'Ocp-Apim-Subscription-Key': 'f89e26f0ad4e402a882efa2650fbdb61'\r\n            }\r\n        }).then(res => {\r\n            const articles = res.data.value;\r\n            this.setState({items:articles});\r\n        }).catch(function (error) {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('https://covid-news-react-app.cognitiveservices.azure.com//bing/v7.0/news/search?q=coronavirus%20USA', {\r\n            headers : {\r\n                'Ocp-Apim-Subscription-Key': 'f89e26f0ad4e402a882efa2650fbdb61'\r\n            }\r\n        }).then(res => {\r\n            const articles = res.data.value;\r\n            this.setState({items:articles});\r\n        }).catch(function (error) {\r\n            console.log(error)\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        console.log(toString(process.env.REACT_APP_KEY))\r\n        const locations = {\r\n            \"backgroundColor\":\"#dcdcde\",\r\n            \"paddingLeft\":\"0\",\r\n            \"paddingRight\":\"0\",\r\n            \"overflow-y\":\"scroll\",\r\n            \"height\":\"100vh\",\r\n            \"fontFamily\":\"Quantico\"\r\n        }\r\n        const feed = {\r\n            \"backgroundColor\" : \"white\",\r\n            \"overflow-y\":\"scroll\",\r\n            \"height\":\"100vh\",\r\n        }\r\n        \r\n        const card_st = {\r\n            \"fontFamily\":\"Alberta\",\r\n            \"fontSize\":\"2em\",\r\n            \"padding\":\"0\",\r\n            \"margin\":\"0\",\r\n            \"text-align\":\"center\"\r\n        }\r\n        \r\n        const {items} = this.state;\r\n\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\" style={locations}>\r\n                        <button className=\"butt_r\">Select State/County</button>\r\n                        <button className=\"butt\" autoFocus onClick={() => this.handleClick(\"USA\")}>USA Overall</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"San%20Francisco\")}>San Francisco, CA</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"San%20Jose\")}>San Jose, CA</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Los%20Angeles\")}>Los Angeles, CA</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Seattle\")}>Seattle, WA</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Boston\")}>Boston, MA</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Chicago\")}>Chicago, IL</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"New%20York%20City\")}>NY City, NY</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Austin\")}>Austin, TX</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Dallas\")}>Dallas, TX</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"California\")}>California</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Washington\")}>Washington</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"New%20York\")}>New York</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Texas\")}>Texas</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Florida\")}>Florida</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Pennsylvania\")}>Pennsylvania</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Illinois\")}>Illinois</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Ohio\")}>Ohio</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Georgia\")}>Georgia</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"North%20Carolina\")}>North Carolina</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Michigan\")}>Michigan</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"New%20Jersey\")}>New Jersey</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Virginia\")}>Virginia</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Arizona\")}>Arizona</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Massachusetts\")}>Massachusetts</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Tennessee\")}>Tennessee</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Indiana\")}>Indiana</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Missouri\")}>Missouri</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Maryland\")}>Maryland</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Wisconsin\")}>Wisconsin</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Colorado\")}>Colorado</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Minnesota\")}>Minnesota</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"South%20Carolina\")}>South Carolina</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Alabama\")}>Alabama</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Lousiana\")}>Lousiana</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Kentucky\")}>Kentucky</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Oregan\")}>Oregan</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Oklahoma\")}>Oklahoma</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Connecticut\")}>Connecticut</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Utah\")}>Utah</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Iowa\")}>Iowa</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Nevada\")}>Nevada</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Arkansas\")}>Arkansas</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Mississippi\")}>Mississippi</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Kansas\")}>Kansas</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"New%20Mexico\")}>New Mexico</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Nebraska\")}>Nebraska</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"West%20Virginia\")}>West Virginia</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Idaho\")}>Idaho</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Hawaii\")}>Hawaii</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"New%20Hampshire\")}>New Hampshire</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Montana\")}>Montana</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Rhode%20Island\")}>Rhode Island</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"Delaware\")}>Delaware</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"North%20Dakota\")}>North Dakota</button>\r\n                        <button className=\"butt\" onClick={() => this.handleClick(\"South%20Dakota\")}>South Dakota</button>\r\n                    </div>\r\n                    <div className=\"col\" style={feed}>\r\n                        <p style={card_st}>\r\n                            Latest News on COVID-19\r\n                        </p>\r\n                        {items.map(item => \r\n                            <Feedcard title={item.name} desc={item.description} url={item.url} provider={item.provider[0].name}/>    \r\n                        )}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n//import logo from './logo.svg';\nimport './App.css';\n\nimport Mainpage from \"./components/mainpage.component\"\n\nfunction App() {\n  return (\n    <div>\n\t\t\n\t\t<Mainpage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}